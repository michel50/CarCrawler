// This file was automatically generated by the Dapper.SimpleCRUD T4 Template
// Do not make changes directly to this file - edit the template instead
// 
// The following connection settings were used to generate this file
// 
//     Connection String Name: `CarCrawler`
//     Provider:               `System.Data.SqlClient`
//     Connection String:      `Data Source=(local);Initial Catalog=CarCrawler;User Id=CarCrawler;Pwd=CarCrawler;`
//     Include Views:          `True`

using System;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using System.Collections.Generic;

namespace CLNotifierManager.Models
{
    /// <summary>
    /// A class which represents the Car table.
    /// </summary>
	[Table("Car")]
	public partial class Car
	{
		[Key]
		public virtual int Id { get; set; }
		public virtual DateTime DateIn { get; set; }
		public virtual string Link { get; set; }
		public virtual string Title { get; set; }
		public virtual string Description { get; set; }
		public virtual string Make { get; set; }
		public virtual string Model { get; set; }
		public virtual int? Miles { get; set; }
		public virtual short? Year { get; set; }
		public virtual decimal? Price { get; set; }
		public virtual short? FeedId { get; set; }
		public virtual bool Processed { get; set; }
		public virtual bool EmailSent { get; set; }
		public virtual Feed Feed { get; set; }
		public virtual IEnumerable<EmailBatch> EmailBatch { get; set; }
	}

    /// <summary>
    /// A class which represents the Feed table.
    /// </summary>
	[Table("Feed")]
	public partial class Feed
	{
		[Key]
		public virtual short Id { get; set; }
		public virtual string FeedCity { get; set; }
		public virtual string FeedState { get; set; }
		public virtual string FeedRssLink { get; set; }
		public virtual bool FeedActive { get; set; }
		public virtual IEnumerable<Car> Car { get; set; }
	}

    /// <summary>
    /// A class which represents the MakeModel table.
    /// </summary>
	[Table("MakeModel")]
	public partial class MakeModel
	{
		[Key]
		public virtual int Id { get; set; }
		public virtual int Year { get; set; }
		public virtual string Make { get; set; }
		public virtual string Model { get; set; }
		public virtual string Style { get; set; }
	}

    /// <summary>
    /// A class which represents the Email table.
    /// </summary>
	[Table("Email")]
	public partial class Email
	{
		[Key]
		public virtual int Id { get; set; }
		public virtual DateTime? EmailGeneratedDate { get; set; }
		public virtual string EmailSubject { get; set; }
		public virtual string EmailMessage { get; set; }
		public virtual bool? EmailSent { get; set; }
		public virtual IEnumerable<EmailBatch> EmailBatch { get; set; }
	}

    /// <summary>
    /// A class which represents the EmailBatch table.
    /// </summary>
	[Table("EmailBatch")]
	public partial class EmailBatch
	{
		[Key]
		public virtual int CarId { get; set; }
		public virtual int EmailId { get; set; }
		public virtual Car Car { get; set; }
		public virtual Email Email { get; set; }
	}

    /// <summary>
    /// A class which represents the RegEx table.
    /// </summary>
	[Table("RegEx")]
	public partial class RegEx
	{
		[Key]
		public virtual short Id { get; set; }
		public virtual short RegExOrder { get; set; }
		public virtual string RegExType { get; set; }
		public virtual string RegExExpression { get; set; }
	}

    /// <summary>
    /// A class which represents the sysdiagrams table.
    /// </summary>
	[Table("sysdiagrams")]
	public partial class sysdiagram
	{
		public virtual string name { get; set; }
		public virtual int principal_id { get; set; }
		[Key]
		public virtual int diagram_id { get; set; }
		public virtual int? version { get; set; }
		public virtual byte[] definition { get; set; }
	}

    /// <summary>
    /// A class which represents the Query table.
    /// </summary>
	[Table("Query")]
	public partial class Query
	{
		[Key]
		public virtual short Id { get; set; }
		public virtual string Subject { get; set; }
		public virtual string TitleAndDescripton { get; set; }
		public virtual byte? AndOr { get; set; }
		public virtual string Ignore { get; set; }
		public virtual byte? MakePredicate { get; set; }
		public virtual string MakeValue { get; set; }
		public virtual bool? MakeAllowNull { get; set; }
		public virtual byte? ModelPredicate { get; set; }
		public virtual string ModelValue { get; set; }
		public virtual bool? ModelAllowNull { get; set; }
		public virtual byte? MilesPredicate { get; set; }
		public virtual string MilesValue { get; set; }
		public virtual bool? MilesAllowNull { get; set; }
		public virtual byte? YearPredicate { get; set; }
		public virtual string YearValue { get; set; }
		public virtual bool? YearAllowNull { get; set; }
		public virtual byte? PricePredicate { get; set; }
		public virtual string PriceValue { get; set; }
		public virtual bool? PriceAllowNull { get; set; }
		public virtual bool? Email { get; set; }
		public virtual Predicate Predicate { get; set; }
	
	}

    /// <summary>
    /// A class which represents the Predicate table.
    /// </summary>
	[Table("Predicate")]
	public partial class Predicate
	{
		[Key]
		public virtual byte Id { get; set; }
		public virtual string PredicateSymbol { get; set; }
		public virtual string PredicateFormat { get; set; }
		public virtual bool? PredicateForAll { get; set; }
		public virtual IEnumerable<Query> Query { get; set; }

	}

}
